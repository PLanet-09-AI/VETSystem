@model IEnumerable<BestReg.Data.InventoryItem>
@using System.Globalization

@{
    ViewData["Title"] = "Inventory Management";
    var currencyFormat = ViewBag.CurrencyFormat as CultureInfo ?? new CultureInfo("en-ZA");
}

<h1>Inventory Management</h1>

@Html.ActionLink("Request Stock from Supplier", "SupplierCreate", "ExternalSupplier", null, new { @class = "btn btn-primary" })

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Item</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().PricePerUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().QuantityInStock)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @item.PricePerUnit.ToString("C", currencyFormat)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuantityInStock)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Canvas for the line graph -->
<div style="width: 100%; height: 400px;">
    <canvas id="inventoryLineChart"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            createInventoryLineChart();
        });

        function createInventoryLineChart() {
            var itemNames = @Html.Raw(Json.Serialize(Model.Select(i => i.Name)));
            var itemQuantities = @Html.Raw(Json.Serialize(Model.Select(i => i.QuantityInStock)));
            var itemPrices = @Html.Raw(Json.Serialize(Model.Select(i => i.PricePerUnit)));

            var ctx = document.getElementById('inventoryLineChart').getContext('2d');
            var inventoryLineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: itemNames,
                    datasets: [
                        {
                            label: 'Quantity in Stock',
                            data: itemQuantities,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            yAxisID: 'y-axis-quantity'
                        },
                        {
                            label: 'Price per Unit',
                            data: itemPrices,
                            borderColor: 'rgba(255, 99, 132, 1)',
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            yAxisID: 'y-axis-price'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        'y-axis-quantity': {
                            type: 'linear',
                            position: 'left',
                            title: {
                                display: true,
                                text: 'Quantity'
                            }
                        },
                        'y-axis-price': {
                            type: 'linear',
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Price (ZAR)'
                            }
                        }
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: 'Inventory Overview'
                        }
                    }
                }
            });
        }
    </script>
}
